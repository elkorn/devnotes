Content localization vs UI localization

An outdated approach is to traet English as the reference language and using key-value pair translations.
 Two fundamental problems:
 - localization logic wired in the source code,
 - other languages' logic in your language logic -> it does not work 1 to 1,

A new paradigm:
 - client-side,
 - isolated (no language interdependencies),
 - grammar-agnostic,
 - responsive,
 - based on a social contract between devs and localizers

<h2 l10n-id="hello"></h2>
 - an attribute within the tag
 - no text, the whole content lives on the server resource base
 - The resource: <hello "Hello, world!">
 - document.l10n.get('hello')
 - language isolation - using templates, variants, gender etc. Generally, a *-* relationship between strings
 - encapsulation 
 document.l10n.localize(['hello', 'new'], function(l10n) {
  var node = document.querySelector('[l10n-id=hello]');
  node.textConent = l10n.entities.hello;
  node.classList.remove('hidden');
});

Try it at 
l20n.org
Fork it at 
github.com/l20n