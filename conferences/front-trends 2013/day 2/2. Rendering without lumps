Getting a smooth user experience, while maybe dropping the framerate a bit.

Parsing (innerHTML) > 
Style computation (recalculate style) >
Layout/Reflow (creating a rendering tree and working out where each element goes) >
Painting

USDoD Maximum response times for a system

Style-dependent propeties - scrollxxx, offsetxxx, innertext
Cache all the Style/Layout things when reading them, instead of reading them more than once in loops. Browser will thank you. 

Box-shadow, blur - hard, one-time, performance hits, scrolling unaffected.
Adding a bg-image ruins the scrolling performance. Avoid fixed backgrounds.

Test, don't assume. Tools - not rules.

100ms is good for static stuff, not animation.
The deadline for animation is 16.67ms. 60 FPS.

requestAnimationFrame (rAF) instead of timeouts. :)

https://github.com/gnarf37/jquery-requestAnimationFrame - fix for jQuery's animation

Old, Single-layered layout IE cannot update pixels taken up by the error dialog not to show the 'trail' so that it was possible to 'paint over'. :)
The new approach is to use multi-layered canvas.

The browser identifies elements requiring their own canvas, resulting in two separate paints being composited together.

CSS3 anim optimization on firefox - add rotate(0.0001deg) - a hack like translateZ(0);

Remember that excessive layering (like with translateZ) might largely slow a page down.

Experiment with the GPU!